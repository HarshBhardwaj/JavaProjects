package com.company;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class BMICalculator {
    private JPanel BMICalculator;
    private JLabel textHeight;
    private JLabel textWeight;
    private JLabel textBMI;
    private JTextField feetTextField;
    private JTextField inchesTextField;
    private JTextField poundsTextField;
    private JTextField BMITextField;
    private JButton computeBMIButton;
    private JButton clearButton;
    private JButton exitButton;

    public BMICalculator() {
        computeBMIButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                double feet, inches, height, weight, BMI;

                try {
                    feet = Double.parseDouble(feetTextField.getText());
                    inches = Double.parseDouble(inchesTextField.getText());
                    weight = Double.parseDouble(textWeight.getText());

                    height = (feet * 12) + inches;

                    BMI = (weight / (height * height)) * 703;

                    textBMI.setText(String.format("%.2f", BMI));
                } catch (Exception e1) {
                    JOptionPane.showMessageDialog(null, "Please Enter Valid Number");

                    textBMI.setText(null);
                    feetTextField.setText(null);
                    inchesTextField.setText(null);
                    textWeight.setText(null);
                }
            }
        });
        clearButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                textBMI.setText(null);
                feetTextField.setText(null);
                inchesTextField.setText(null);
                textWeight.setText(null);
            }
        });
        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                System.exit(0);
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("BMICalculator");
        frame.setContentPane(new BMICalculator().BMICalculator);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        BMICalculator = new JPanel();
        BMICalculator.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 5, new Insets(0, 0, 0, 0), -1, -1, false, true));
        textHeight = new JLabel();
        Font textHeightFont = this.$$$getFont$$$("Tahoma", -1, 20, textHeight.getFont());
        if (textHeightFont != null) textHeight.setFont(textHeightFont);
        textHeight.setText("Height:");
        BMICalculator.add(textHeight, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textWeight = new JLabel();
        Font textWeightFont = this.$$$getFont$$$("Tahoma", -1, 20, textWeight.getFont());
        if (textWeightFont != null) textWeight.setFont(textWeightFont);
        textWeight.setText("Weight:");
        BMICalculator.add(textWeight, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textBMI = new JLabel();
        Font textBMIFont = this.$$$getFont$$$("Tahoma", -1, 20, textBMI.getFont());
        if (textBMIFont != null) textBMI.setFont(textBMIFont);
        textBMI.setText("BMI:");
        BMICalculator.add(textBMI, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inchesTextField = new JTextField();
        Font inchesTextFieldFont = this.$$$getFont$$$("Tahoma", -1, 20, inchesTextField.getFont());
        if (inchesTextFieldFont != null) inchesTextField.setFont(inchesTextFieldFont);
        inchesTextField.setText("");
        BMICalculator.add(inchesTextField, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        poundsTextField = new JTextField();
        Font poundsTextFieldFont = this.$$$getFont$$$("Tahoma", -1, 20, poundsTextField.getFont());
        if (poundsTextFieldFont != null) poundsTextField.setFont(poundsTextFieldFont);
        poundsTextField.setText("");
        BMICalculator.add(poundsTextField, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        BMITextField = new JTextField();
        Font BMITextFieldFont = this.$$$getFont$$$("Tahoma", -1, 20, BMITextField.getFont());
        if (BMITextFieldFont != null) BMITextField.setFont(BMITextFieldFont);
        BMITextField.setText("");
        BMICalculator.add(BMITextField, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Tahoma", -1, 15, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("feet");
        BMICalculator.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$("Tahoma", -1, 15, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("inches");
        BMICalculator.add(label2, new com.intellij.uiDesigner.core.GridConstraints(0, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$("Tahoma", -1, 15, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setText("pounds");
        BMICalculator.add(label3, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        computeBMIButton = new JButton();
        Font computeBMIButtonFont = this.$$$getFont$$$("Tahoma", Font.BOLD, 16, computeBMIButton.getFont());
        if (computeBMIButtonFont != null) computeBMIButton.setFont(computeBMIButtonFont);
        computeBMIButton.setText("Compute BMI");
        BMICalculator.add(computeBMIButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        clearButton = new JButton();
        Font clearButtonFont = this.$$$getFont$$$("Tahoma", -1, 14, clearButton.getFont());
        if (clearButtonFont != null) clearButton.setFont(clearButtonFont);
        clearButton.setText("Clear");
        BMICalculator.add(clearButton, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        exitButton = new JButton();
        Font exitButtonFont = this.$$$getFont$$$("Tahoma", -1, 14, exitButton.getFont());
        if (exitButtonFont != null) exitButton.setFont(exitButtonFont);
        exitButton.setText("Exit");
        BMICalculator.add(exitButton, new com.intellij.uiDesigner.core.GridConstraints(3, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        feetTextField = new JTextField();
        Font feetTextFieldFont = this.$$$getFont$$$("Tahoma", -1, 20, feetTextField.getFont());
        if (feetTextFieldFont != null) feetTextField.setFont(feetTextFieldFont);
        feetTextField.setText("");
        BMICalculator.add(feetTextField, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return BMICalculator;
    }
}
